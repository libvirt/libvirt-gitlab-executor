#!/usr/bin/env python3

# libvirt-gci - GitLab CI libvirt executor tool
#
# Copyright (C) 2021 Red Hat, Inc.
#
# SPDX-License-Identifier: GPL-2.0-or-later

import logging
import sys

from provisioner.application import Application
from provisioner.cmdline import CmdLine
from provisioner.logger import LevelFormatter


def logInit():
    log_level_formats = {
        logging.DEBUG: "[%(levelname)s] %(module)s:%(funcName)s:%(lineno)d: %(message)s",
        logging.ERROR: "[%(levelname)s]: %(message)s",
    }

    custom_formatter = LevelFormatter(log_level_formats)
    custom_handler = logging.StreamHandler(stream=sys.stderr)
    custom_handler.setFormatter(custom_formatter)

    log = logging.getLogger()
    log.addHandler(custom_handler)

    return log


if __name__ == "__main__":
    log = logInit()
    args = CmdLine().parse()

    if args.debug:
        log.setLevel(logging.DEBUG)

    cli_args = vars(args)
    log.debug(f"Cmdline args={cli_args}")

    try:
        Application(cli_args).run()
    except Exception as ex:
        if args.debug:
            log.exception(ex)
        else:
            log.error(ex)
        sys.exit(1)
